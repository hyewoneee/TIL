파이썬은 범용의 고수준 언어며 코드를 **읽기 쉽다.**


- 코드를 **작성하기도 쉽다.**
- 금방 실무에 적용할 수 있는 아주 좋은 학습 곡선을 가지고 있다.

### 파이썬을 쓰면 안 될 때

- 프로그램이 계산 작업을 많이 하는 경우
    - CPU 바운드라 한다.
    - 수행하는 계산 작업은 CPU 속도에 의해 결정된다.

파이썬 3에서 작성한 코드는 파이썬 2에서 동작하지 않는다.(파이썬2 →파이썬3도 동작하지 않는다)

- 고치기 어려운 것은 서로 호환되지 않는다.

대화식 인터프리터가 자동으로 값을 출력하는 것은 파이썬 언어의 일부가 아니라 시간을 절약하기 위한 기능이다.

### 파이썬 철학

    아름다운 것이 추한 것보다 낫다.
    
    명확한 것이 함축적인 것보다 낫다.
    
    단순한 것이 복잡한 것보다 낫다.
    
    복잡한 것이 난해한 것보다 낫다.
    
    단조로운 것이 뒤엉킨 것보다 낫다.
    
    분포되어 있는 것이 빽빽한 것보다 낫다.
    
    가독성은 중요하다.
    
    특별하 경우라 하더라도 규칙응ㄹ 어길 수 있을 만큼 특별하지 않다.
    
    비록 실용성이 순수함을 앞선다 할지라도 오류를 절대로 넘기면 안된다.
    
    분명하게 조용하지 않는 한 모호한 상황에서도 추측하려는 유혹을 떨쳐내야 한다.
    
    그것을 할 수 있는 분명한 한 가지 방법이 있어야 한다. 그방법이 유일하면 더 좋다.
    
    네덜란드 사람(파이썬의 창시자를 가리킴)이 아니라면, 처음에 그 방법이 분명하지 않을 수도 있다.
    
    지금 하는 것이 하지 않는 것보다 낫다.
    
    비록 하지 않는 것이 종종 지금 *당장* 하는 것보다 나을지라도.
    
    구현한 것이 설명하기 어렵다면, 그것은 나쁜 아이디어다.
    
    구현한 것이 설명하기 쉽다면, 그것은 좋은 아이디어일 것이다.
    
    네임스페이스는 정말 좋은 아이디어다. 더 많이 사용하자!
